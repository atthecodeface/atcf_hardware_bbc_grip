name="atcf_hardware_bbc"
configs=["all"]
default_config="all"
base_repos=["atcf_hardware_std", "atcf_hardware_apb", "atcf_hardware_utils", "atcf_hardware_video", "atcf_hardware_io", "atcf_hardware_de1", "atcf_hardware_bbc"]
workflow="single"
stages=["clean", "build", "build_verilog", "smoke_test", "regress"]
doc="""
This repository is for building, testing and running the BBC microcomputer implementation in CDL

It requires ATCF_CDL_TOOLS_PATH to point to an ATCF CDL tools grip directory configured with at least grip and CDL.
Hence $(ATCF_CDL_TOOLS_PATH)/tools/bin/cdl will be the cdl tool, and $(ATCF_CDL_TOOLS_PATH)/grip/grip will be the grip tool.

To build and run the BBC simulation, use:
  grip make run_bbc

To run the VNC RFB use:
  grip make run_vnc_rfb
"""
logging="Yes"

[env]
# The next line forces ATCF_CDL_TOOLS_PATH into the grip shell environment - and it must be supplied for configure
ATCF_CDL_TOOLS_PATH="@ATCF_CDL_TOOLS_PATH@"
# Having PATH here forces path in to the grip shell environment setting, based of the *current* path given it uses @PATH@
PATH="@ATCF_CDL_TOOLS_PATH@/tools/bin:@ATCF_CDL_TOOLS_PATH@/grip:@PATH@"
BUILD_DIR="@GRIP_ROOT_PATH@/build"
CDL_ROOT="@ATCF_CDL_TOOLS_PATH@/tools"
# As of 2024, Verilator DOES NOT want VERILATOR_ROOT set.
# VERILATOR_ROOT="@ATCF_CDL_TOOLS_PATH@/tools"
VERILATOR_SHARE="@ATCF_CDL_TOOLS_PATH@/tools/share/verilator"
LDFLAGS='-lpng -ljpeg'

[config.all]
repos=["atcf_fpga"]

[config.all.env]

[config.all.stage.clean_all_sim]
env.SRC_ROOT     = "@GRIP_ROOT_PATH@/atcf_hardware_bbc"
env.MAKE_OPTIONS = "-f @GRIP_ROOT_PATH@/atcf_hardware_video/Makefile SRC_ROOT='@SRC_ROOT@' BUILD_ROOT=@BUILD_DIR@"
exec="mkdir -p @BUILD_DIR@ && cd @BUILD_DIR@ && make @MAKE_OPTIONS@ clean"

[config.all.stage.do_clean]
env.SRC_ROOT     = "'@GRIP_ROOT_PATH@/atcf_hardware_bbc'"
exec="mkdir -p @BUILD_DIR@ && cd @BUILD_DIR@ && make -f @GRIP_ROOT_PATH@/atcf_hardware_video/Makefile SRC_ROOT=@SRC_ROOT@ BUILD_ROOT=@BUILD_DIR@clean"
action="yes"

[config.all.stage.build]
# requires=["clean_all_sim"]
env.SRC_ROOT     = "'@GRIP_ROOT_PATH@/atcf_hardware_bbc'"
wd="@BUILD_DIR@"
exec="mkdir -p @BUILD_DIR@ && cd @BUILD_DIR@ && make -f @GRIP_ROOT_PATH@/atcf_hardware_video/Makefile SRC_ROOT=@SRC_ROOT@ BUILD_ROOT=@BUILD_DIR@ -j8 all"

[config.all.stage.smoke]
action="yes"

[config.all.stage.run_bbc]
action="yes"

[config.all.stage.run_vnc_rfb]
action="yes"

[repo.atcf_hardware_std]
url="https://github.com/atthecodeface/atcf_hardware_std.git"
branch="master"
path="atcf_hardware_std"
workflow="single"

[repo.atcf_hardware_utils]
url="https://github.com/atthecodeface/atcf_hardware_utils.git"
branch="master"
path="atcf_hardware_utils"
workflow="single"
smoke_test.satisfies="smoke"

[repo.atcf_hardware_apb]
url="https://github.com/atthecodeface/atcf_hardware_apb.git"
branch="master"
path="atcf_hardware_apb"
workflow="single"
smoke_test.satisfies="smoke"

[repo.atcf_hardware_video]
url="https://github.com/atthecodeface/atcf_hardware_video.git"
branch="master"
path="atcf_hardware_video"
workflow="single"
smoke_test.satisfies="smoke"

[repo.atcf_hardware_io]
url="https://github.com/atthecodeface/atcf_hardware_io.git"
branch="master"
path="atcf_hardware_io"
workflow="single"

[repo.atcf_hardware_de1]
url="https://github.com/atthecodeface/atcf_hardware_de1.git"
branch="master"
path="atcf_hardware_de1"
workflow="single"

[repo.atcf_hardware_bbc]
url="https://github.com/atthecodeface/atcf_hardware_bbc.git"
branch="master"
path="atcf_hardware_bbc"
workflow="single"
clean_sim.satisfies="clean"
build_sim.satisfies="build"
run_bbc.satisfies="run_bbc"
run_vnc_rfb.satisfies="run_vnc_rfb"
smoke_test.satisfies="smoke"

[repo.atcf_hardware]
url="https://github.com/atthecodeface/cdl_hardware.git"
branch="master"
path="atcf_hardware"
workflow="single"
configure={exec="autoconf && ./configure"}
build_sim={exec="make -j8"}
build_verilog={exec="make -j8 verilog"}

[repo.atcf_fpga]
url="https://github.com/atthecodeface/quartus.git"
branch="master"
path="atcf_fpga"
workflow="single"

[repo.grip]
url="https://github.com/atthecodeface/grip.git"
branch="master"
path="grip"
workflow="readonly"

